pipeline{
    environment{
        docker_image = ""
    }
    agent any
    stages{
        stage('Stage 1: Git Clone'){
            steps{
                git branch: 'master',
                url:'https://github.com/ShrCode1/MyCalculator'
            }
        }

        stage('Step 2: Maven Build'){
            steps{
            sh 'mvn clean install'
            }
        }

        stage('Stage 3: Build Docker Image'){
            steps{
                script{
                    docker_image = docker.build "shrey302/calculator:latest"
                }
            }
        }

        stage('Stage 4: Push docker image to hub') {
            steps{
                script{
                    docker.withRegistry('', 'DockerHubCred'){
                        docker_image.push()
                    }
                }
            }
        }

//         stage('Stage 5: Clean docker images'){
//             steps{
//                 script{
//                     sh 'docker container prune -f'
//                     sh 'docker image prune -f'
//                 }
//             }
//         }
            stage('Stage 5: Clean Docker Images and Containers') {
                steps {
                    script {
                        // Remove dangling images (images with <none> as the tag)
                        sh 'docker image prune -f --filter "dangling=true"'

                        // Remove unused containers
                        sh 'docker container prune -f'

                        // Remove duplicate containers by stopping and removing them
                        // This assumes "duplicate" means containers with the same name
                        sh '''
                            for container in $(docker ps -aq --format "{{.Names}}" | sort | uniq -d); do
                                echo "Removing duplicate container: $container"
                                docker stop $container || true
                                docker rm $container || true
                            done
                        '''
                    }
                }
            }

        stage('Step 6: Ansible Deployment') {
            steps{
                    ansiblePlaybook becomeUser: null,
                    colorized: true,
                    credentialsId: 'localhost',
                    disableHostKeyChecking: true,
                    installation: 'Ansible',
                    inventory: 'Deployment/inventory',
                    playbook: 'Deployment/deploy.yml',
                    sudoUser: null
                }
            }
        }
}